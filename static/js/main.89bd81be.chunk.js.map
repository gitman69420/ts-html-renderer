{"version":3,"sources":["Components/FilePane.tsx","Components/EditorContainer.tsx","App.tsx","index.tsx"],"names":["FilePane","children","className","style","marginLeft","defaultTabStyle","height","minWidth","maxWidth","borderWidth","borderColor","borderStyle","margin","display","alignItems","openTabStyle","backgroundColor","borderBottom","closeTabStyle","EditorContainer","useState","html","js","css","content","setContent","doc","setDoc","listOfFiles","setList","currentFile","setCurrentFile","FileTab","fileName","closeTab","React","isOpen","setOpen","useEffect","includes","console","log","onClick","File","timeOut","setTimeout","clearTimeout","map","item","namOfFile","length","filter","name","alert","options","theme","mode","split","lineWrapping","lineNumbers","smartIndent","indentWithTabs","autocorrect","onBeforeChange","editor","data","value","onChange","srcDoc","title","sandbox","frameBorder","width","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.89bd81be.chunk.js","sourcesContent":["import { ReactNode } from 'react';\r\nimport './FilePane.css';\r\n\r\nexport const FilePane = ({children}:{children:ReactNode}) => {\r\n    return <>\r\n        <div className=\"file-pane-body\">\r\n            <div className=\"file-pane-header\">\r\n                <span style={{marginLeft:\"0.5rem\"}}>Files</span> \r\n            </div>\r\n            <div className=\"files-container\">\r\n            {children}\r\n            </div>\r\n        </div>\r\n    </>\r\n}","/* IMPORTS FROM LIBRARIES */\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\nimport React, { useState, useEffect } from \"react\";\r\n\r\n/* IMPORTS FOR STYLES */\r\nimport './styles.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/css/css';\r\nimport 'codemirror/theme/blackboard.css';\r\nimport 'codemirror/lib/codemirror.css';\r\n\r\n/* IMPORTS FOR COMPONENTS*/\r\nimport { FilePane } from \"./FilePane\";\r\n\r\n/* STYLE OF FILE TABS */\r\nconst defaultTabStyle = {\r\n    height: \"1.5rem\",\r\n    minWidth: \"fit-content\",\r\n    maxWidth: \"6rem\",\r\n    borderWidth: \"2px 0\",\r\n    borderColor: \"white\",\r\n    borderStyle: \"solid\",\r\n    margin: \"0\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n}\r\n\r\n/* STYLE JSON OF OPENED TAB */\r\nconst openTabStyle = {\r\n    ...defaultTabStyle,\r\n    backgroundColor: \"#040d42\",\r\n    borderBottom: \"0\"\r\n}\r\n\r\n/* STYLE JSON OF CLOSED TAB */\r\nconst closeTabStyle = {\r\n    ...defaultTabStyle,\r\n    backgroundColor: \"#4858b8\",\r\n}\r\n\r\n/* COMPONENT FOR ENTIRE APP */\r\nexport const EditorContainer = (): JSX.Element => {\r\n    const [content, setContent] = useState({\r\n        html: '',\r\n        js: '',\r\n        css: '',\r\n    });\r\n\r\n    /* STATE VARIABLE FOR RENDERING HTML, CSS AND JAVASCRIPT */\r\n    const [doc, setDoc] = useState(``);\r\n\r\n    /* ARRAY OF ALL FILES */\r\n    const listOfAllFiles = [\"index.html\", \"index.js\", \"index.css\"];\r\n\r\n    /* STATE VARIABLE TO STORE ALL OPEN FILES */\r\n    const [listOfFiles, setList] = useState([\"index.html\"]);\r\n\r\n    /* STATE VARIABLE FOR CHECKING WHAT THE CURRENT FILE IS */\r\n    const [currentFile, setCurrentFile] = useState(listOfFiles[0]);\r\n\r\n    /* COMPONENT FOR SINGULAR TAB FOR A FILE */\r\n    const FileTab = ({ currentFile, fileName, closeTab }: { currentFile: string, fileName: string, closeTab: (fileName: string) => void }): JSX.Element => {\r\n\r\n        const [isOpen, setOpen] = React.useState(fileName === currentFile);\r\n\r\n        useEffect(() => {\r\n            if (!(listOfFiles.includes(currentFile))) {\r\n                setCurrentFile(listOfFiles[0]);\r\n                console.log('triggered');\r\n            }\r\n        }, [listOfFiles]);\r\n\r\n        return <>\r\n            <div style={isOpen ? openTabStyle : closeTabStyle} onClick={() => { setOpen(true); setCurrentFile(fileName); }}>\r\n                <p className=\"tab-file-name\">\r\n                    {`${fileName}`}\r\n                </p>\r\n                <button className=\"tab-close-button\" onClick={() => { closeTab(fileName) }}>\r\n                    X\r\n                </button>\r\n            </div>\r\n        </>;\r\n    }\r\n\r\n    /* COMPONENT FOR SINGULAR FILE IN THE FILE PANE */\r\n    const File = ({ fileName }: { fileName: string }) => {\r\n        const fileClosedStyle = {\r\n            backgroundColor: \"red\"\r\n        }\r\n\r\n        const openFile = () => {\r\n            if (!(listOfFiles.includes(fileName))) {\r\n                setList([...listOfFiles, fileName]);\r\n            }\r\n            setCurrentFile(fileName);\r\n        }\r\n\r\n        return <>\r\n            <div className=\"file\" style={(fileName in listOfFiles) ? fileClosedStyle : {}} onClick={openFile}>\r\n                <p className=\"tab-file-name\">{`${fileName}`}</p>\r\n            </div>\r\n        </>;\r\n    }\r\n\r\n    /* REDETTING DELAY FOR EVERY DOCUMENT VALUE CHANGE */\r\n    const renderDelay = 250; //DELAY VALUE IN MILLISECONDS\r\n    React.useEffect(() => {\r\n        const timeOut = setTimeout(() => {\r\n            setDoc(`<html>\r\n            <style>${content.css}</style>\r\n            <script>${content.js}</script>\r\n            <body>${content.html}</body>\r\n        </html>`)\r\n        }, renderDelay);\r\n\r\n        return () => { clearTimeout(timeOut); }\r\n    }, [content]);\r\n\r\n    return <>\r\n        <FilePane>\r\n            {\r\n                listOfAllFiles.map((item) => {\r\n                    return <File fileName={item} />\r\n                })\r\n            }\r\n        </FilePane>\r\n        <div>\r\n            <div className=\"editor-container\">\r\n                <div className=\"editor-title\">\r\n                    <div style={{ display: \"flex\" }}>\r\n                        {listOfFiles.map((item) => {\r\n                            return <FileTab currentFile={currentFile} fileName={item} closeTab={(namOfFile) => { if (listOfFiles.length !== 1) setList(listOfFiles.filter((name) => { return name !== namOfFile; })); else alert(\"You cannot close all the files\"); }} />\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <ControlledEditor\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    theme: 'blackboard',\r\n                    mode: (currentFile.split('.')[1] === 'html') ? 'xml' : (currentFile.split('.')[1] === 'js') ? 'javascript' : 'css',\r\n                    lineWrapping: true,\r\n                    lineNumbers: true,\r\n                    smartIndent:true,\r\n                    indentWithTabs:true,\r\n                    autocorrect:true,\r\n                }}\r\n                onBeforeChange={(editor, data, value) => {\r\n                    setContent({ ...content, [currentFile.split('.')[1]]: value });\r\n                }}\r\n                onChange={(editor, data, value) => {\r\n                }}\r\n                value={\r\n                    (currentFile.split('.')[1] === 'html') ? content.html : (currentFile.split('.')[1] === 'js' ? content.js : content.css)\r\n                }\r\n            />\r\n\r\n            <iframe\r\n                srcDoc={doc}\r\n                title=\"Output\"\r\n                sandbox=\"allow-scripts\"\r\n                frameBorder=\"1px 0 0 1px\"\r\n                width=\"100%\"\r\n                height=\"60%\"\r\n                style={{ backgroundColor: \"white\" }}\r\n            />\r\n        </div>\r\n    </>;\r\n}","import './App.css';\nimport { EditorContainer } from \"./Components/EditorContainer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <EditorContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}